// app/layout.tsx
"use client";

import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { ReduxProvider } from "@/redux/store/reduxProvider";
import { Navbar } from "@/components/navbar/page";
import { usePathname } from "next/navigation";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

export default function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  return (
    <html lang="en">
      <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
        <ReduxProvider>
          <LayoutContent>{children}</LayoutContent>
        </ReduxProvider>
      </body>
    </html>
  );
}

// Client component for conditional rendering
function LayoutContent({ children }: { children: React.ReactNode }) {
  const pathname = usePathname();
  
  // Show navbar only on dashboard routes
  const showNavbar = pathname?.startsWith('/dashboard');
  
  return (
    <>
      {showNavbar && <Navbar />}
      {children}
    </>
  );
}